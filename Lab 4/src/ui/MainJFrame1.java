/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.BadLocationException;
import models.City;
import models.Community;
import models.EncounterHistory;
import models.House;
import models.Patient;
import models.PatientDirectory;
import models.PersonDirectory;
import models.Systems;

/**
 *
 * @author jacksonalexander
 */
public class MainJFrame1 extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    PersonDirectory listOfPerson;
    PatientDirectory listOfPatient;
//    EncounterHistory listOfEncounter;
    EncounterHistory encounterHistory;
    ArrayList<City> listOfCity;
    ArrayList<Community> listOfCommunity;
    ArrayList<House> listOfHouses;
    City city;
    Community community;
      Systems systemsObj;
    public MainJFrame1() throws IOException, FileNotFoundException, BadLocationException, ParseException {
        initComponents();
        systemsObj = new Systems();
        long cityID =0; 
        String cityName="";
        long communityID = 0;
        long zipCode = 0;
        long houseID=0;
        long ssn= 878427973;
        this.listOfHouses = new ArrayList<House>();
        String houseAddress="";
        city = new City( cityID,  cityName);
        community = new Community( cityID   , cityName );
        for(City c: systemsObj.getListOfCity()) {
            for(Community comm: c.getListOfCommunity()) {
                for(House h: comm.getListOfHouse()) {
                    this.listOfHouses.add(h);
                }
            }
        }
       this.listOfPerson = new PersonDirectory();
       this.listOfPatient = new PatientDirectory();
//       this.encounterHistory= new EncounterHistory(ssn);
       this.listOfCommunity = city.getListOfCommunity();
        this.listOfCity = systemsObj.getListOfCity();
//        this.listOfHouses = community.getListOfHouse();
        for(Patient patient: this.listOfPatient.getListOfPatients()) {
            patient.setEncounterHistory(new EncounterHistory(patient.getSsn()));
        }
//        this.listOfEncounter = new EncounterHistory();
       
       //System.out.println(this.listOfCars.getListOfCars().get(0).getCity());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new javax.swing.JSplitPane();
        controlPanel = new javax.swing.JPanel();
        btnAdmin = new javax.swing.JButton();
        btnViewPerson = new javax.swing.JButton();
        btnViewPatient = new javax.swing.JButton();
        btnCreatePerson = new javax.swing.JButton();
        btnCreatePatient = new javax.swing.JButton();
        workArea = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        controlPanel.setBackground(new java.awt.Color(143, 188, 219));

        btnAdmin.setBackground(new java.awt.Color(51, 153, 255));
        btnAdmin.setText("Admin");
        btnAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminActionPerformed(evt);
            }
        });

        btnViewPerson.setBackground(new java.awt.Color(51, 153, 255));
        btnViewPerson.setText("View Person");
        btnViewPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPersonActionPerformed(evt);
            }
        });

        btnViewPatient.setBackground(new java.awt.Color(51, 153, 255));
        btnViewPatient.setText("View Patient");
        btnViewPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientActionPerformed(evt);
            }
        });

        btnCreatePerson.setBackground(new java.awt.Color(51, 153, 255));
        btnCreatePerson.setText("Create Person");
        btnCreatePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatePersonActionPerformed(evt);
            }
        });

        btnCreatePatient.setBackground(new java.awt.Color(51, 153, 255));
        btnCreatePatient.setText("Create Patient");
        btnCreatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatePatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnViewPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreatePerson, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreatePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewPatient))
                .addGap(12, 12, 12))
        );

        controlPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdmin, btnCreatePatient, btnCreatePerson, btnViewPatient, btnViewPerson});

        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(btnAdmin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCreatePerson)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnViewPerson)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCreatePatient)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnViewPatient)
                .addContainerGap(297, Short.MAX_VALUE))
        );

        controlPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdmin, btnCreatePatient, btnCreatePerson, btnViewPatient, btnViewPerson});

        splitPane.setLeftComponent(controlPanel);

        workArea.setBackground(new java.awt.Color(143, 188, 219));

        javax.swing.GroupLayout workAreaLayout = new javax.swing.GroupLayout(workArea);
        workArea.setLayout(workAreaLayout);
        workAreaLayout.setHorizontalGroup(
            workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 655, Short.MAX_VALUE)
        );
        workAreaLayout.setVerticalGroup(
            workAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 596, Short.MAX_VALUE)
        );

        splitPane.setRightComponent(workArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 799, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminActionPerformed
        // TODO add your handling code here:
        AdminJPanel personCreatePanel = new AdminJPanel(this.listOfPerson,this.listOfPatient,this.listOfCity, this.listOfCommunity,this.listOfHouses);
        splitPane.setRightComponent(personCreatePanel);
    }//GEN-LAST:event_btnAdminActionPerformed

    private void btnViewPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPersonActionPerformed
        // TODO add your handling code here:
        PersonModifyViewJPanel personModifyViewPanel = new PersonModifyViewJPanel(this.listOfPerson);
        splitPane.setRightComponent(personModifyViewPanel);
    }//GEN-LAST:event_btnViewPersonActionPerformed

    private void btnViewPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientActionPerformed
        // TODO add your handling code here:
        PatientModifyViewJPanel patientModifyViewPanel = new PatientModifyViewJPanel(this.listOfPatient, this.encounterHistory);
        splitPane.setRightComponent(patientModifyViewPanel);
        
    }//GEN-LAST:event_btnViewPatientActionPerformed

    private void btnCreatePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatePersonActionPerformed
        // TODO add your handling code here:
        PersonCreateJPanel personCreatePanel = new PersonCreateJPanel(this.listOfPerson);
        splitPane.setRightComponent(personCreatePanel);
    }//GEN-LAST:event_btnCreatePersonActionPerformed

    private void btnCreatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatePatientActionPerformed
        // TODO add your handling code here:
        PatientCreateJPanel patientCreatePanel = new PatientCreateJPanel(this.listOfPerson, this.listOfPatient);
        splitPane.setRightComponent(patientCreatePanel);
        
    }//GEN-LAST:event_btnCreatePatientActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainJFrame1().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(MainJFrame1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (BadLocationException ex) {
                    Logger.getLogger(MainJFrame1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ParseException ex) {
                    Logger.getLogger(MainJFrame1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdmin;
    private javax.swing.JButton btnCreatePatient;
    private javax.swing.JButton btnCreatePerson;
    private javax.swing.JButton btnViewPatient;
    private javax.swing.JButton btnViewPerson;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JPanel workArea;
    // End of variables declaration//GEN-END:variables
}
