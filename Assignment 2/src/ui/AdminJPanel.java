/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import model.Car;
import model.ListofCars;

/**
 *
 * @author jacksonalexander
 */
public class AdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    ListofCars listOfCars;
    Car c;
    public AdminJPanel(ListofCars listOfCars) {
        initComponents();
//        System.out.println(listOfCars.getListOfCars().get(1));
        this.listOfCars = listOfCars;
        populateTable(this.listOfCars.getListOfCars());
        addTableListener(this.listOfCars, this);
       
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewCar = new javax.swing.JTable();
        lblFirstAvailCar = new javax.swing.JLabel();
        btnFirstAvailCar = new javax.swing.JButton();
        lblNoOfCarsAvail = new javax.swing.JLabel();
        lblDisplayNoOfCarsAvail = new javax.swing.JLabel();
        btnNoOfCarsAvail = new javax.swing.JButton();
        lblNoOfCarsNonAvail = new javax.swing.JLabel();
        lblDisplayNoOfCarsNonAvail = new javax.swing.JLabel();
        btnNoOfCarsNonAvail = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtCarManufactur = new javax.swing.JTextField();
        btnCarManufactur = new javax.swing.JButton();
        lblCarManufacturYear = new javax.swing.JLabel();
        txtCarManufacturYear = new javax.swing.JTextField();
        btnCarManufacturYear = new javax.swing.JButton();
        lblCapacity = new javax.swing.JLabel();
        txtMinSeat = new javax.swing.JTextField();
        lblMinMax = new javax.swing.JLabel();
        txtMaxSeat = new javax.swing.JTextField();
        lblSerialNo = new javax.swing.JLabel();
        txtSerialNo = new javax.swing.JTextField();
        btnSerialNo = new javax.swing.JButton();
        btnMinMax = new javax.swing.JButton();
        lblModelNo = new javax.swing.JLabel();
        txtModelNo = new javax.swing.JTextField();
        btnModelNo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        btnCity = new javax.swing.JButton();
        lblAvailability = new javax.swing.JLabel();
        chbYes = new javax.swing.JCheckBox();
        chbNo = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        lblInsCar = new javax.swing.JLabel();
        txtInsCar = new javax.swing.JTextField();
        lblInsManufacturer = new javax.swing.JLabel();
        txtInsManufacturer = new javax.swing.JTextField();
        lblInsManuYear = new javax.swing.JLabel();
        txtInsManufacturingYear = new javax.swing.JTextField();
        lblInsCapacity = new javax.swing.JLabel();
        txtInsCapacity = new javax.swing.JTextField();
        lblInsSerialNo = new javax.swing.JLabel();
        txtInsSerialNo = new javax.swing.JTextField();
        lblInsModelNo = new javax.swing.JLabel();
        txtInsModelNo = new javax.swing.JTextField();
        lblInsCity = new javax.swing.JLabel();
        txtInsCity = new javax.swing.JTextField();
        lblInsAvailability = new javax.swing.JLabel();
        txtInsAvailability = new javax.swing.JTextField();
        lblInsExpiry = new javax.swing.JLabel();
        txtInsExpiry = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        lblUpdateDate = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblComp = new javax.swing.JTable();

        setBackground(new java.awt.Color(143, 188, 219));

        lblTitle.setFont(new java.awt.Font("Big Caslon", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("ADMIN DASHBOARD");

        tblViewCar.setBackground(new java.awt.Color(204, 255, 255));
        tblViewCar.setForeground(new java.awt.Color(0, 51, 51));
        tblViewCar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, "", null, "", null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Car", "Manufacturer", "Mfd. Year", "Capacity", "Serial #", "Model #", "City", "Availability", "Main. Certificate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Long.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblViewCar.setColumnSelectionAllowed(true);
        tblViewCar.setGridColor(new java.awt.Color(220, 220, 220));
        tblViewCar.setSelectionForeground(new java.awt.Color(204, 204, 204));
        jScrollPane1.setViewportView(tblViewCar);
        tblViewCar.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        lblFirstAvailCar.setText("First Available Car");

        btnFirstAvailCar.setText("Find");
        btnFirstAvailCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstAvailCarActionPerformed(evt);
            }
        });

        lblNoOfCarsAvail.setText("Number of Available Cars");

        btnNoOfCarsAvail.setText("Search");
        btnNoOfCarsAvail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoOfCarsAvailActionPerformed(evt);
            }
        });

        lblNoOfCarsNonAvail.setText("Number of Unvailable Cars");

        btnNoOfCarsNonAvail.setText("Search");
        btnNoOfCarsNonAvail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoOfCarsNonAvailActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Manufacturer:");

        txtCarManufactur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCarManufacturActionPerformed(evt);
            }
        });

        btnCarManufactur.setText("Search");
        btnCarManufactur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarManufacturActionPerformed(evt);
            }
        });

        lblCarManufacturYear.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblCarManufacturYear.setText("Manufacturing Year:");

        txtCarManufacturYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCarManufacturYearActionPerformed(evt);
            }
        });

        btnCarManufacturYear.setText("Search");
        btnCarManufacturYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarManufacturYearActionPerformed(evt);
            }
        });

        lblCapacity.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblCapacity.setText("Minimum Seats:");

        lblMinMax.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblMinMax.setText("Maximum Seats :");

        lblSerialNo.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblSerialNo.setText("Serial Number:");

        btnSerialNo.setText("Search");
        btnSerialNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSerialNoActionPerformed(evt);
            }
        });

        btnMinMax.setText("Search");
        btnMinMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinMaxActionPerformed(evt);
            }
        });

        lblModelNo.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblModelNo.setText("Model Number:");

        btnModelNo.setText("Search");
        btnModelNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModelNoActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(204, 204, 204));
        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel2.setText("Filters:");

        lblCity.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblCity.setText("City:");

        btnCity.setText("Search");
        btnCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCityActionPerformed(evt);
            }
        });

        lblAvailability.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblAvailability.setText("Mfd. Certific:");

        chbYes.setText("Yes");
        chbYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbYesActionPerformed(evt);
            }
        });

        chbNo.setText("No");
        chbNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbNoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel3.setText("Insert:");

        lblInsCar.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblInsCar.setText("Car:");

        txtInsCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInsCarActionPerformed(evt);
            }
        });

        lblInsManufacturer.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblInsManufacturer.setText("Manufacturer:");

        lblInsManuYear.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblInsManuYear.setText("Manufacturing Year:");

        lblInsCapacity.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblInsCapacity.setText("Capacity:");

        txtInsCapacity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInsCapacityActionPerformed(evt);
            }
        });

        lblInsSerialNo.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblInsSerialNo.setText("Serial No:");

        lblInsModelNo.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblInsModelNo.setText("Model No:");

        txtInsModelNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInsModelNoActionPerformed(evt);
            }
        });

        lblInsCity.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblInsCity.setText("City:");

        lblInsAvailability.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblInsAvailability.setText("Availability:");

        lblInsExpiry.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblInsExpiry.setText("Maintenance Certificate:");

        btnInsert.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        lblUpdateDate.setText("Void");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 2, 10)); // NOI18N
        jLabel4.setText("Car Name Should not contain numbers");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 2, 10)); // NOI18N
        jLabel5.setText("Manufactuer field should not contain numbers");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 2, 10)); // NOI18N
        jLabel6.setText("Manufacuring Year field should hould be less than the current year.");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 2, 10)); // NOI18N
        jLabel7.setText("Capacity field should contain numbers only. ");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 2, 10)); // NOI18N
        jLabel8.setText("Serial Number field should be unique and of six digit number.");

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 2, 10)); // NOI18N
        jLabel9.setText("Model Number should be in the format that contains Capital Alphabters followed by two digits.");

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 2, 10)); // NOI18N
        jLabel10.setText("City field should contains only alphabets.");

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 2, 10)); // NOI18N
        jLabel11.setText("Availability field should contain only two values; Yes or No.");

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 2, 10)); // NOI18N
        jLabel12.setText("Maintenance certificate field should contain only two values; Yes or No.");

        jLabel13.setText("Last Update Date:");

        tblComp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Company"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblComp);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(130, 130, 130))
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblFirstAvailCar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFirstAvailCar)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNoOfCarsNonAvail)
                    .addComponent(lblNoOfCarsAvail))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDisplayNoOfCarsAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDisplayNoOfCarsNonAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNoOfCarsAvail)
                    .addComponent(btnNoOfCarsNonAvail))
                .addGap(78, 78, 78)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUpdateDate, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblCapacity)
                                .addGap(0, 0, 0)
                                .addComponent(txtMinSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(btnMinMax))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblModelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSerialNo)
                                    .addComponent(lblCarManufacturYear)
                                    .addComponent(jLabel1)
                                    .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, 0)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtCarManufactur, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                            .addComponent(txtCarManufacturYear)
                                            .addComponent(txtSerialNo))
                                        .addGap(0, 0, 0)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnCarManufactur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnCarManufacturYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnSerialNo)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtModelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, 0)
                                        .addComponent(btnModelNo))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, 0)
                                        .addComponent(btnCity))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMinMax)
                                .addGap(0, 0, 0)
                                .addComponent(txtMaxSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(56, 56, 56))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblAvailability, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chbYes)
                        .addGap(18, 18, 18)
                        .addComponent(chbNo)
                        .addGap(129, 129, 129)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblInsManufacturer)
                    .addComponent(lblInsCapacity)
                    .addComponent(lblInsSerialNo)
                    .addComponent(lblInsAvailability)
                    .addComponent(lblInsExpiry, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInsCar)
                    .addComponent(lblInsManuYear)
                    .addComponent(lblInsCity)
                    .addComponent(lblInsModelNo))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtInsManufacturingYear)
                                .addComponent(txtInsModelNo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                                .addComponent(txtInsCity, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtInsManufacturer)
                                .addComponent(txtInsAvailability, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtInsCapacity, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtInsSerialNo, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtInsCar))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtInsExpiry, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel12)))
                .addGap(0, 29, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, lblCapacity, lblCarManufacturYear, lblCity, lblMinMax, lblModelNo, lblSerialNo});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblInsAvailability, lblInsCapacity, lblInsCar, lblInsCity, lblInsExpiry, lblInsManuYear, lblInsManufacturer, lblInsModelNo, lblInsSerialNo});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtInsAvailability, txtInsCapacity, txtInsCar, txtInsCity, txtInsExpiry, txtInsManufacturer, txtInsManufacturingYear, txtInsModelNo, txtInsSerialNo});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCarManufactur, txtCarManufacturYear, txtCity, txtMaxSeat, txtModelNo, txtSerialNo});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCarManufactur, btnCarManufacturYear, btnCity, btnMinMax, btnModelNo, btnSerialNo});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblFirstAvailCar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnFirstAvailCar)
                                .addComponent(lblNoOfCarsAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDisplayNoOfCarsAvail)
                                .addComponent(btnNoOfCarsAvail))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblNoOfCarsNonAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDisplayNoOfCarsNonAvail)
                                .addComponent(btnNoOfCarsNonAvail))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblUpdateDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtInsCar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblInsCar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0))
                            .addComponent(jLabel4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtInsManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInsManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblInsManuYear)
                            .addComponent(txtInsManufacturingYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtInsCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInsCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtInsSerialNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInsSerialNo)
                            .addComponent(jLabel8))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtInsModelNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInsModelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtInsCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInsCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtInsAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInsAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtInsExpiry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInsExpiry)
                            .addComponent(jLabel12))
                        .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCarManufactur, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCarManufactur))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCarManufacturYear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCarManufacturYear)
                            .addComponent(lblCarManufacturYear, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSerialNo)
                            .addComponent(txtSerialNo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSerialNo))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtModelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnModelNo)
                            .addComponent(lblModelNo))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCity)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCity))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtMinSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCapacity))
                                .addGap(0, 0, 0)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMinMax)
                                    .addComponent(txtMaxSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(btnMinMax)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAvailability)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(chbYes)
                                    .addComponent(chbNo))))
                        .addGap(112, 112, 112))))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtCarManufactur, txtCarManufacturYear, txtCity, txtMaxSeat, txtMinSeat, txtModelNo, txtSerialNo});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, lblAvailability, lblCapacity, lblCarManufacturYear, lblCity, lblMinMax, lblModelNo, lblSerialNo});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblInsAvailability, lblInsCapacity, lblInsCar, lblInsCity, lblInsExpiry, lblInsManuYear, lblInsManufacturer, lblInsModelNo, lblInsSerialNo});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtInsAvailability, txtInsCapacity, txtInsCar, txtInsCity, txtInsExpiry, txtInsManufacturer, txtInsManufacturingYear, txtInsModelNo, txtInsSerialNo});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCarManufactur, btnCarManufacturYear, btnCity, btnMinMax, btnModelNo, btnSerialNo});

    }// </editor-fold>//GEN-END:initComponents

    private void btnFirstAvailCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstAvailCarActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        for(Car c: this.listOfCars.getListOfCars() ){
        if(c.isAvailability()){
           listOfCarsPass.add(c);          
           
           System.out.println("it is what it is");
           populateTable(listOfCarsPass); 
           break;
        }
        
           break; 
        }
       // model.setRowCount(0);
        
    }//GEN-LAST:event_btnFirstAvailCarActionPerformed

    private void btnNoOfCarsAvailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoOfCarsAvailActionPerformed
        // TODO add your handling code here:
        int count=0;
        for(Car c: this.listOfCars.getListOfCars() ){
        if(c.isAvailability()){
           count++;  
    }//GEN-LAST:event_btnNoOfCarsAvailActionPerformed
                lblDisplayNoOfCarsAvail.setText(count+"");
        }
    }
    private void btnNoOfCarsNonAvailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoOfCarsNonAvailActionPerformed
        // TODO add your handling code here:
       int count=0;
        for(Car c: this.listOfCars.getListOfCars() ){
        if(!c.isAvailability()){
           count++;  
    }                                                
                lblDisplayNoOfCarsNonAvail.setText(count+"");
        }
        
    }//GEN-LAST:event_btnNoOfCarsNonAvailActionPerformed

    private void txtCarManufacturActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCarManufacturActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCarManufacturActionPerformed

    private void btnCarManufacturActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarManufacturActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        for(Car c: this.listOfCars.getListOfCars() ){
            
        if(txtCarManufactur.getText().equals(c.getMake())){
           listOfCarsPass.add(c);          
           
        }
        populateTable(listOfCarsPass); 
            
        }
    }//GEN-LAST:event_btnCarManufacturActionPerformed

    private void txtCarManufacturYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCarManufacturYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCarManufacturYearActionPerformed

    private void btnCarManufacturYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarManufacturYearActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        for(Car c: this.listOfCars.getListOfCars() ){
        if(Integer.parseInt(txtCarManufacturYear.getText())== c.getManuYear()){
           listOfCarsPass.add(c);          
           
        }
        populateTable(listOfCarsPass); 
        }
    }//GEN-LAST:event_btnCarManufacturYearActionPerformed

    private void btnSerialNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSerialNoActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        for(Car c: this.listOfCars.getListOfCars() ){
        if(Long.parseLong(txtSerialNo.getText())==c.getSerialNo()){
           listOfCarsPass.add(c);          
           
        }
        populateTable(listOfCarsPass); 
        }
    }//GEN-LAST:event_btnSerialNoActionPerformed

    private void btnMinMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinMaxActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        int min = Integer.parseInt(txtMinSeat.getText());
        int max = Integer.parseInt(txtMaxSeat.getText());
        for(Car c: this.listOfCars.getListOfCars() ){
        if(min<= c.getCapacity() && max>= c.getCapacity() ){
           listOfCarsPass.add(c);          
           
        }
        populateTable(listOfCarsPass);
    }  
        
    }//GEN-LAST:event_btnMinMaxActionPerformed

    private void btnModelNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModelNoActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        for(Car c: this.listOfCars.getListOfCars() ){
        if(txtModelNo.getText().equals(c.getModelNo())){
           listOfCarsPass.add(c);          
           
        }
        populateTable(listOfCarsPass); 
        }
    }//GEN-LAST:event_btnModelNoActionPerformed

    private void btnCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCityActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        for(Car c: this.listOfCars.getListOfCars() ){
        if(txtCity.getText().equals(c.getCity())){
           listOfCarsPass.add(c);          
           
        }
        populateTable(listOfCarsPass); 
        }
        
    }//GEN-LAST:event_btnCityActionPerformed

    private void chbYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbYesActionPerformed
        // TODO add your handling code here:
      ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        for(Car c: this.listOfCars.getListOfCars() ){
        if(c.isExpiry()){
           listOfCarsPass.add(c);          
           
        }
        populateTable(listOfCarsPass); 
        }  
    }//GEN-LAST:event_chbYesActionPerformed

    private void chbNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbNoActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        for(Car c: this.listOfCars.getListOfCars() ){
        if(!c.isExpiry()){
           listOfCarsPass.add(c);          
           
        }
        populateTable(listOfCarsPass); 
        }  
    }//GEN-LAST:event_chbNoActionPerformed

    private void txtInsModelNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInsModelNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInsModelNoActionPerformed

    private void txtInsCapacityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInsCapacityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInsCapacityActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
//        ArrayList<Car> listOfCarsPass = new ArrayList<Car>();

        int flag_count = 0;
        String carName="";
//        String carName = txtInsCar.getText();    
        if(txtInsCar.getText().length()==0)
        {System.out.println("No Value Inserted");
        flag_count=1;
        } else if(Pattern.matches("[a-zA-Z]+\\.?",txtInsCar.getText()))
        {  
            carName = txtInsCar.getText();// Prints carName
        }else{System.out.println("This is an invalid Input");     
        flag_count=1;
        }
        
//        String make =txtInsManufacturer.getText();
        String make = "";
        if(txtInsManufacturer.getText().length()==0)
        {System.out.println("No Value Inserted");
        flag_count=1;
        } else if(Pattern.matches("[a-zA-Z]+\\.?",txtInsManufacturer.getText()))
        {  
            make =txtInsManufacturer.getText();// Prints name
        }else{System.out.println("This is an invalid Input");     
        flag_count=1;
        }
        
//        int manuYear =Integer.parseInt(txtInsManufacturingYear.getText());
 int manuYear = 0;
       int year = Calendar.getInstance().get(Calendar.YEAR);
       if(txtInsManufacturingYear.getText().length()==0)
        {
            System.out.println("No Value Inserted");
        flag_count=1;
        } else if(Integer.parseInt(txtInsManufacturingYear.getText())>year)
        {
            System.out.println("Year Should be less than the current year");
       flag_count=1;
         
        } else if(Pattern.matches("^\\d{4}$",txtInsManufacturingYear.getText()))
        { 
            manuYear =Integer.parseInt(txtInsManufacturingYear.getText());// 
        }else
        {
            System.out.println("This is an invalid Input");     
        flag_count=1;
        }
//        int capacity =Integer.parseInt(txtInsCapacity.getText());
        int capacity=0;
        if(txtInsCapacity.getText().length()==0)
        {System.out.println("No Value Inserted");
        flag_count=1;
        } else if(Pattern.matches("^\\d{1}$",txtInsCapacity.getText()))
        {
            capacity =Integer.parseInt(txtInsCapacity.getText());

        }else{System.out.println("This is an invalid Input");     
        flag_count=1;
        }
//       int serialNo =Integer.parseInt(txtInsSerialNo.getText());
        long serialNo=0;
        if(txtInsSerialNo.getText().length()==0)
        {System.out.println("No Value Inserted");
        flag_count=1;
        } else if(Pattern.matches("^\\d{6}$",txtInsSerialNo.getText()))
        {        
            serialNo =Long.parseLong(txtInsSerialNo.getText());
        }else{System.out.println("This is an invalid Input");     
        flag_count=1;
        }
        for(Car c: listOfCars.getListOfCars()) {
            if(c.getSerialNo() == Long.parseLong(txtInsSerialNo.getText())) {
                flag_count = 1;
                break;
            }
        }
        
//        String modelNo =txtInsModelNo.getText();
        String modelNo ="" ;
        if(txtInsModelNo.getText().length()==0)
        {System.out.println("No Value Inserted");
        flag_count=1;
        } else if(Pattern.matches("^[A-Z]{9}[0-9]{2}$",txtInsModelNo.getText()))
        {   modelNo =txtInsModelNo.getText();
        }else{System.out.println("This is an invalid Input");     
        flag_count=1;
        }

//         String city =txtInsCity.getText();
         String city ="" ;
         if(txtInsCity.getText().length()==0)
        {System.out.println("No Value Inserted");
        flag_count=1;
        } else if(Pattern.matches("[a-zA-Z]+\\.?",txtInsCity.getText()))
        {    city =txtInsCity.getText();
        }else{System.out.println("This is an invalid Input");     
        flag_count=1;
        }
         
//        if(txtInsAvailability.getText().equals("Yes")){
//        availability = true;
//    }
//        else{
//                 availability = false;
//                }
       
       boolean availability = true;
       
       if(txtInsAvailability.getText().length()==0)
        {System.out.println("No Value Inserted");
        flag_count=1;
        } else if(Pattern.matches("^(?:Yes|No)$",txtInsAvailability.getText()))
        {   
           if(txtInsAvailability.getText().equals("Yes")){
        availability = true;
    }
        else{
                 availability = false;
                }
        }else{System.out.println("This is an invalid Input");     
        flag_count=1;
        }
       
        
        
        boolean expiry =true;
        
//        if(txtInsExpiry.getText().equals("Yes")){
//         expiry =true;
//    }
//        else{
//                 expiry =false;
//                }
if(txtInsExpiry.getText().length()==0)
        {System.out.println("No Value Inserted");
        flag_count=1;
        } else if(Pattern.matches("^(?:Yes|No)$",txtInsExpiry.getText()))
        {   
           if(txtInsExpiry.getText().equals("Yes")){
         expiry =true;
    }
        else{
                 expiry =false;
                }
        }else{System.out.println("This is an invalid Input");     
        flag_count=1;
        }
        
       
       
       if(flag_count ==1){
           JOptionPane.showMessageDialog(this, "Invalid");
       }
       else{
        JOptionPane.showMessageDialog(this, "Person Information Saved.");
        
        Car car = new Car(carName,make ,manuYear,capacity, serialNo, modelNo, city,availability,expiry);
    this.listOfCars.addNewCar(car);
    Date dt = new Date();
    this.listOfCars.setUpdateDate(dt.toString());
       populateTable(this.listOfCars.getListOfCars()) ;
      
    }                          
    
    }//GEN-LAST:event_btnInsertActionPerformed

    private void txtInsCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInsCarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInsCarActionPerformed
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCarManufactur;
    private javax.swing.JButton btnCarManufacturYear;
    private javax.swing.JButton btnCity;
    private javax.swing.JButton btnFirstAvailCar;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnMinMax;
    private javax.swing.JButton btnModelNo;
    private javax.swing.JButton btnNoOfCarsAvail;
    private javax.swing.JButton btnNoOfCarsNonAvail;
    private javax.swing.JButton btnSerialNo;
    private javax.swing.JCheckBox chbNo;
    private javax.swing.JCheckBox chbYes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAvailability;
    private javax.swing.JLabel lblCapacity;
    private javax.swing.JLabel lblCarManufacturYear;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblDisplayNoOfCarsAvail;
    private javax.swing.JLabel lblDisplayNoOfCarsNonAvail;
    private javax.swing.JLabel lblFirstAvailCar;
    private javax.swing.JLabel lblInsAvailability;
    private javax.swing.JLabel lblInsCapacity;
    private javax.swing.JLabel lblInsCar;
    private javax.swing.JLabel lblInsCity;
    private javax.swing.JLabel lblInsExpiry;
    private javax.swing.JLabel lblInsManuYear;
    private javax.swing.JLabel lblInsManufacturer;
    private javax.swing.JLabel lblInsModelNo;
    private javax.swing.JLabel lblInsSerialNo;
    private javax.swing.JLabel lblMinMax;
    private javax.swing.JLabel lblModelNo;
    private javax.swing.JLabel lblNoOfCarsAvail;
    private javax.swing.JLabel lblNoOfCarsNonAvail;
    private javax.swing.JLabel lblSerialNo;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUpdateDate;
    private javax.swing.JTable tblComp;
    private javax.swing.JTable tblViewCar;
    private javax.swing.JTextField txtCarManufactur;
    private javax.swing.JTextField txtCarManufacturYear;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtInsAvailability;
    private javax.swing.JTextField txtInsCapacity;
    private javax.swing.JTextField txtInsCar;
    private javax.swing.JTextField txtInsCity;
    private javax.swing.JTextField txtInsExpiry;
    private javax.swing.JTextField txtInsManufacturer;
    private javax.swing.JTextField txtInsManufacturingYear;
    private javax.swing.JTextField txtInsModelNo;
    private javax.swing.JTextField txtInsSerialNo;
    private javax.swing.JTextField txtMaxSeat;
    private javax.swing.JTextField txtMinSeat;
    private javax.swing.JTextField txtModelNo;
    private javax.swing.JTextField txtSerialNo;
    // End of variables declaration//GEN-END:variables

 private void populateTable(ArrayList<Car> listOfCars) {
     
     lblUpdateDate.setText(this.listOfCars.getUpdateDate());
     DefaultTableModel model = (DefaultTableModel) tblViewCar.getModel();
     model.setRowCount(0);
     
     for(Car c : listOfCars){
         Object[] row = new Object[10];
         row[0] = c.getAvailCar();
         row[1] = c.getMake().trim();
         row[2] = c.getManuYear();
         row[3] = c.getCapacity();
         row[4] = c.getSerialNo();
         row[5] = c.getModelNo().trim();
         row[6] = c.getCity().trim();
         if(c.isAvailability() ==true){
           row[7] = "Yes" ; 
         }
         else{
             row[7] = "No";
         }
         //row[7] = c.isAvailability();
         
         if(c.isExpiry() ==true){
           row[8] = "Yes" ; 
         }
         else{
             row[8] = "No";
         }
         
        // row[8] = c.isExpiry();
         model.addRow(row);
        // System.out.println(row[1]);
           //  System.out.println(listOfCars.getListOfCars().get(0));
     }
    // System.out.println("syt"); 
ArrayList<String> listOfCompanies = new ArrayList<String>();
DefaultTableModel model2 = (DefaultTableModel) tblComp.getModel();
     model2.setRowCount(0);
for(Car uberCar : this.listOfCars.getListOfCars()) {
if(!listOfCompanies.contains(uberCar.getMake())) {
listOfCompanies.add(uberCar.getMake());
//}
//}
Object[] row = new Object[2];
row[0] = uberCar.getMake();
model2.addRow(row);
 }
}
 }
 private void addTableListener(ListofCars listOfCars, AdminJPanel thisJPanel){
     tblViewCar.getModel().addTableModelListener(new TableModelListener(){
         
         public void tableChanged(TableModelEvent e){
           int flag =0;  
         if(e.getFirstRow()!=-1 && e.getColumn() != -1){
         DefaultTableModel model = (DefaultTableModel) tblViewCar.getModel();
         int updateCol = e.getColumn();
         int updateRow = e.getFirstRow();
         Long serialNoUpdateCar = (Long) model.getValueAt(updateRow, 4);
         System.out.println(e.getColumn());
         for(Car c : listOfCars.getListOfCars()){
//             System.out.println(c.getSerialNo());
          if(c.getSerialNo()== serialNoUpdateCar){
              if(updateCol == 6) {
                  String citY =(String) model.getValueAt(updateRow, 6);
                  if(citY.length()== 0){
//                  System.out.println("Entry cannot be null");
//                  flag =1;
                  JOptionPane.showMessageDialog(thisJPanel, "Entry cannot be null");
                  populateTable(listOfCars.getListOfCars());
                  }else if(Pattern.matches("[a-zA-Z]+\\.?",citY)){
                
                      c.setCity((String) model.getValueAt(updateRow, 6));
                  }
                  else{
               JOptionPane.showMessageDialog(thisJPanel, "Invalid Entry");
                  }
//              JOptionPane.showMessageDialog(this, "City is updated.");
              Date dt = new Date();
       listOfCars.setUpdateDate(dt.toString());
               }
               if(updateCol == 7) {
                   String availa=((String) model.getValueAt(updateRow, 7)).toLowerCase();
                   if (availa.length()==0){
                   JOptionPane.showMessageDialog(thisJPanel, "Entry cannot be null");
                   populateTable(listOfCars.getListOfCars());
                   }else if(Pattern.matches("^(?:yes|no)$",availa)){
               c.setAvailability(((String) model.getValueAt(updateRow, 7)).toLowerCase() == "yes" ? true : false);
                   } else{
                       JOptionPane.showMessageDialog(thisJPanel, "Invalid Entry");
                   }
                  
               Date dt = new Date();
       listOfCars.setUpdateDate(dt.toString());
               }
          
              
          }
         }
         
         }
         
         }
     });
     
     
 }
 
 
          }
