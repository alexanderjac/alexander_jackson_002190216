/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import model.Car;
import model.ListofCars;

/**
 *
 * @author jacksonalexander
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    ListofCars listOfCars;
    public ViewJPanel(ListofCars listOfCars) {
        initComponents();
//        System.out.println(listOfCars.getListOfCars().get(1));
        this.listOfCars = listOfCars;
        populateTable(this.listOfCars.getListOfCars());
        
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewCar = new javax.swing.JTable();
        lblFirstAvailCar = new javax.swing.JLabel();
        btnFirstAvailCar = new javax.swing.JButton();
        lblNoOfCarsAvail = new javax.swing.JLabel();
        lblDisplayNoOfCarsAvail = new javax.swing.JLabel();
        btnNoOfCarsAvail = new javax.swing.JButton();
        lblNoOfCarsNonAvail = new javax.swing.JLabel();
        lblDisplayNoOfCarsNonAvail = new javax.swing.JLabel();
        btnNoOfCarsNonAvail = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtCarManufactur = new javax.swing.JTextField();
        btnCarManufactur = new javax.swing.JButton();
        lblCarManufacturYear = new javax.swing.JLabel();
        txtCarManufacturYear = new javax.swing.JTextField();
        btnCarManufacturYear = new javax.swing.JButton();
        lblCapacity = new javax.swing.JLabel();
        txtMinSeat = new javax.swing.JTextField();
        lblMinMax = new javax.swing.JLabel();
        txtMaxSeat = new javax.swing.JTextField();
        lblSerialNo = new javax.swing.JLabel();
        txtSerialNo = new javax.swing.JTextField();
        btnSerialNo = new javax.swing.JButton();
        btnMinMax = new javax.swing.JButton();
        lblModelNo = new javax.swing.JLabel();
        txtModelNo = new javax.swing.JTextField();
        btnModelNo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        btnCity = new javax.swing.JButton();
        lblAvailability = new javax.swing.JLabel();
        chbYes = new javax.swing.JCheckBox();
        chbNo = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblComp = new javax.swing.JTable();

        setBackground(new java.awt.Color(143, 188, 219));

        lblTitle.setFont(new java.awt.Font("Big Caslon", 0, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("USER DASHBOARD");

        tblViewCar.setBackground(new java.awt.Color(204, 255, 255));
        tblViewCar.setForeground(new java.awt.Color(0, 51, 51));
        tblViewCar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Car", "Manufacturer", "Mfd. Year", "Capacity", "Serial #", "Model #", "City", "Availability", "Main. Certificate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblViewCar.setColumnSelectionAllowed(true);
        tblViewCar.setGridColor(new java.awt.Color(220, 220, 220));
        tblViewCar.setSelectionForeground(new java.awt.Color(204, 204, 204));
        jScrollPane1.setViewportView(tblViewCar);
        tblViewCar.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        lblFirstAvailCar.setText("First Available Car");

        btnFirstAvailCar.setText("Find");
        btnFirstAvailCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstAvailCarActionPerformed(evt);
            }
        });

        lblNoOfCarsAvail.setText("Number of Available Cars");

        btnNoOfCarsAvail.setText("Search");
        btnNoOfCarsAvail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoOfCarsAvailActionPerformed(evt);
            }
        });

        lblNoOfCarsNonAvail.setText("Number of Unavailable Cars");

        lblDisplayNoOfCarsNonAvail.setBackground(new java.awt.Color(255, 255, 255));

        btnNoOfCarsNonAvail.setText("Search");
        btnNoOfCarsNonAvail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoOfCarsNonAvailActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Manufacturer:");

        txtCarManufactur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCarManufacturActionPerformed(evt);
            }
        });

        btnCarManufactur.setText("Search");
        btnCarManufactur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarManufacturActionPerformed(evt);
            }
        });

        lblCarManufacturYear.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblCarManufacturYear.setText("Manufacturing Year:");

        txtCarManufacturYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCarManufacturYearActionPerformed(evt);
            }
        });

        btnCarManufacturYear.setText("Search");
        btnCarManufacturYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarManufacturYearActionPerformed(evt);
            }
        });

        lblCapacity.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblCapacity.setText("Minimum Seats:");

        lblMinMax.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblMinMax.setText("Maximum Seats :");

        lblSerialNo.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblSerialNo.setText("Serial Number:");

        btnSerialNo.setText("Search");
        btnSerialNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSerialNoActionPerformed(evt);
            }
        });

        btnMinMax.setText("Search");
        btnMinMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinMaxActionPerformed(evt);
            }
        });

        lblModelNo.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblModelNo.setText("Model Number:");

        btnModelNo.setText("Search");
        btnModelNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModelNoActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(204, 204, 204));
        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setText("Filters:");

        lblCity.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblCity.setText("City:");

        btnCity.setText("Search");
        btnCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCityActionPerformed(evt);
            }
        });

        lblAvailability.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblAvailability.setText("Man. Certific:");

        chbYes.setText("Yes");
        chbYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbYesActionPerformed(evt);
            }
        });

        chbNo.setText("No");
        chbNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbNoActionPerformed(evt);
            }
        });

        tblComp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Company"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblComp);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1150, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, 0))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblMinMax)
                                                .addComponent(lblCapacity)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblCarManufacturYear)
                                                    .addComponent(lblSerialNo)
                                                    .addComponent(lblModelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(jLabel1))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtMaxSeat)
                                            .addComponent(txtMinSeat)
                                            .addComponent(txtSerialNo, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                            .addComponent(txtCarManufacturYear, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                            .addComponent(txtCarManufactur, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                            .addComponent(txtCity)
                                            .addComponent(txtModelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblAvailability)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(chbYes)
                                        .addGap(16, 16, 16)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnCarManufactur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnCarManufacturYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnSerialNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnModelNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnMinMax))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(chbNo))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(lblFirstAvailCar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFirstAvailCar)
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNoOfCarsNonAvail)
                                    .addComponent(lblNoOfCarsAvail))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDisplayNoOfCarsAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDisplayNoOfCarsNonAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnNoOfCarsAvail)
                                    .addComponent(btnNoOfCarsNonAvail))
                                .addGap(156, 156, 156)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCarManufactur, txtCarManufacturYear, txtSerialNo});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, lblCarManufacturYear, lblModelNo, lblSerialNo});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFirstAvailCar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFirstAvailCar)
                            .addComponent(lblNoOfCarsAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDisplayNoOfCarsAvail)
                            .addComponent(btnNoOfCarsAvail))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNoOfCarsNonAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDisplayNoOfCarsNonAvail)
                            .addComponent(btnNoOfCarsNonAvail)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCarManufactur, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCarManufacturYear, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCarManufacturYear, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCarManufacturYear))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSerialNo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSerialNo)
                            .addComponent(btnSerialNo))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtModelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblModelNo)
                            .addComponent(btnModelNo))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCity)
                            .addComponent(btnCity))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCapacity)
                            .addComponent(txtMinSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaxSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMinMax))
                        .addGap(2, 2, 2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCarManufactur)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMinMax)
                        .addGap(16, 16, 16)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbNo)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(chbYes)
                        .addComponent(lblAvailability)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtCarManufactur, txtCarManufacturYear, txtModelNo, txtSerialNo});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, lblCarManufacturYear, lblModelNo, lblSerialNo});

    }// </editor-fold>//GEN-END:initComponents

    private void btnFirstAvailCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstAvailCarActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        for(Car c: this.listOfCars.getListOfCars() ){
        if(c.isAvailability()){
           listOfCarsPass.add(c);          
           
           System.out.println("it is what it is");
           populateTable(listOfCarsPass); 
           break;
        }
        
           break; 
        }
       // model.setRowCount(0);
        
    }//GEN-LAST:event_btnFirstAvailCarActionPerformed

    private void btnNoOfCarsAvailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoOfCarsAvailActionPerformed
        // TODO add your handling code here:
        int count=0;
        for(Car c: this.listOfCars.getListOfCars() ){
        if(c.isAvailability()){
           count++;  
    }//GEN-LAST:event_btnNoOfCarsAvailActionPerformed
                lblDisplayNoOfCarsAvail.setText(count+"");
        }
    }
    private void btnNoOfCarsNonAvailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoOfCarsNonAvailActionPerformed
        // TODO add your handling code here:
       int count=0;
        for(Car c: this.listOfCars.getListOfCars() ){
        if(!c.isAvailability()){
           count++;  
    }                                                
                lblDisplayNoOfCarsNonAvail.setText(count+"");
        }
        
    }//GEN-LAST:event_btnNoOfCarsNonAvailActionPerformed

    private void txtCarManufacturActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCarManufacturActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCarManufacturActionPerformed

    private void btnCarManufacturActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarManufacturActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        for(Car c: this.listOfCars.getListOfCars() ){
            
        if(txtCarManufactur.getText().equals(c.getMake())){
           listOfCarsPass.add(c);          
           
        }
        populateTable(listOfCarsPass); 
            
        }
    }//GEN-LAST:event_btnCarManufacturActionPerformed

    private void txtCarManufacturYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCarManufacturYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCarManufacturYearActionPerformed

    private void btnCarManufacturYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarManufacturYearActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        for(Car c: this.listOfCars.getListOfCars() ){
        if(Integer.parseInt(txtCarManufacturYear.getText())== c.getManuYear()){
           listOfCarsPass.add(c);          
           
        }
        populateTable(listOfCarsPass); 
        }
    }//GEN-LAST:event_btnCarManufacturYearActionPerformed

    private void btnSerialNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSerialNoActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        for(Car c: this.listOfCars.getListOfCars() ){
        if(Long.parseLong(txtSerialNo.getText())==c.getSerialNo()){
           listOfCarsPass.add(c);          
           
        }
        populateTable(listOfCarsPass); 
        }
    }//GEN-LAST:event_btnSerialNoActionPerformed

    private void btnMinMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinMaxActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        int min = Integer.parseInt(txtMinSeat.getText());
        int max = Integer.parseInt(txtMaxSeat.getText());
        for(Car c: this.listOfCars.getListOfCars() ){
        if(min<= c.getCapacity() && max>= c.getCapacity() ){
           listOfCarsPass.add(c);          
           
        }
        populateTable(listOfCarsPass);
    }  
        
    }//GEN-LAST:event_btnMinMaxActionPerformed

    private void btnModelNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModelNoActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        for(Car c: this.listOfCars.getListOfCars() ){
        if(txtModelNo.getText().equals(c.getModelNo())){
           listOfCarsPass.add(c);          
           
        }
        populateTable(listOfCarsPass); 
        }
    }//GEN-LAST:event_btnModelNoActionPerformed

    private void btnCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCityActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        for(Car c: this.listOfCars.getListOfCars() ){
        if(txtCity.getText().equals(c.getCity())){
           listOfCarsPass.add(c);          
           
        }
        populateTable(listOfCarsPass); 
        }
        
    }//GEN-LAST:event_btnCityActionPerformed

    private void chbYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbYesActionPerformed
        // TODO add your handling code here:
      ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        for(Car c: this.listOfCars.getListOfCars() ){
        if(c.isExpiry()){
           listOfCarsPass.add(c);          
           
        }
        populateTable(listOfCarsPass); 
        }  
    }//GEN-LAST:event_chbYesActionPerformed

    private void chbNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbNoActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> listOfCarsPass = new ArrayList<Car>();
        for(Car c: this.listOfCars.getListOfCars() ){
        if(!c.isExpiry()){
           listOfCarsPass.add(c);          
           
        }
        populateTable(listOfCarsPass); 
        }  
    }//GEN-LAST:event_chbNoActionPerformed
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCarManufactur;
    private javax.swing.JButton btnCarManufacturYear;
    private javax.swing.JButton btnCity;
    private javax.swing.JButton btnFirstAvailCar;
    private javax.swing.JButton btnMinMax;
    private javax.swing.JButton btnModelNo;
    private javax.swing.JButton btnNoOfCarsAvail;
    private javax.swing.JButton btnNoOfCarsNonAvail;
    private javax.swing.JButton btnSerialNo;
    private javax.swing.JCheckBox chbNo;
    private javax.swing.JCheckBox chbYes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAvailability;
    private javax.swing.JLabel lblCapacity;
    private javax.swing.JLabel lblCarManufacturYear;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblDisplayNoOfCarsAvail;
    private javax.swing.JLabel lblDisplayNoOfCarsNonAvail;
    private javax.swing.JLabel lblFirstAvailCar;
    private javax.swing.JLabel lblMinMax;
    private javax.swing.JLabel lblModelNo;
    private javax.swing.JLabel lblNoOfCarsAvail;
    private javax.swing.JLabel lblNoOfCarsNonAvail;
    private javax.swing.JLabel lblSerialNo;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblComp;
    private javax.swing.JTable tblViewCar;
    private javax.swing.JTextField txtCarManufactur;
    private javax.swing.JTextField txtCarManufacturYear;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtMaxSeat;
    private javax.swing.JTextField txtMinSeat;
    private javax.swing.JTextField txtModelNo;
    private javax.swing.JTextField txtSerialNo;
    // End of variables declaration//GEN-END:variables

 private void populateTable(ArrayList<Car> listOfCars) {
     DefaultTableModel model = (DefaultTableModel) tblViewCar.getModel();
     model.setRowCount(0);
     
     for(Car c : listOfCars){
         Object[] row = new Object[10];
         row[0] = c.getAvailCar();
         row[1] = c.getMake().trim();
         row[2] = c.getManuYear();
         row[3] = c.getCapacity();
         row[4] = c.getSerialNo();
         row[5] = c.getModelNo().trim();
         row[6] = c.getCity().trim();
         if(c.isAvailability() ==true){
           row[7] = "Yes" ; 
         }
         else{
             row[7] = "No";
         }
         //row[7] = c.isAvailability();
         
         if(c.isExpiry() ==true){
           row[8] = "Yes" ; 
         }
         else{
             row[8] = "No";
         }
         
        // row[8] = c.isExpiry();
         model.addRow(row);
        // System.out.println(row[1]);
           //  System.out.println(listOfCars.getListOfCars().get(0));
     }
    // System.out.println("syt"); 
    ArrayList<String> listOfCompanies = new ArrayList<String>();
DefaultTableModel model2 = (DefaultTableModel) tblComp.getModel();
     model2.setRowCount(0);
for(Car uberCar : this.listOfCars.getListOfCars()) {
if(!listOfCompanies.contains(uberCar.getMake())) {
listOfCompanies.add(uberCar.getMake());
//}
//}
Object[] row = new Object[2];
row[0] = uberCar.getMake();
model2.addRow(row);
}


 }
 
}
}